version: '3.8'

services:
  # 1. 데이터베이스 서비스 (PostgreSQL)
  db:
    image: postgres:15-alpine # PostgreSQL 15 이미지 사용
    container_name: cpu-dashboard-db
    environment:
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=cpudb
    volumes:
      - postgres_data:/var/lib/postgresql/data # DB 데이터를 내 노트북에 저장
    ports:
      - "5432:5432" # 내 노트북 5432 포트와 연결
    restart: unless-stopped

  # 2. 백엔드 서비스 (FastAPI)
  backend:
    build: ./backend # ./backend/Dockerfile을 사용해 빌드
    container_name: cpu-dashboard-backend
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload # 자동 새로고침
    volumes:
      - ./backend:/app # 내 노트북의 ./backend 폴더를 컨테이너의 /app에 연결
    ports:
      - "8000:8000"
    environment:
      # FastAPI가 이 주소로 DB에 접속하게 됩니다.
      - DATABASE_URL=postgresql://myuser:mypassword@db:5432/cpudb
    depends_on:
      - db # DB가 먼저 실행되도록 함
    restart: unless-stopped

  # 3. 프론트엔드 서비스 (React)
  frontend:
    build: ./frontend # ./frontend/Dockerfile을 사용해 빌드
    container_name: cpu-dashboard-frontend
    volumes:
      - ./frontend:/app     # 내 노트북의 ./frontend 폴더를 컨테이너의 /app에 연결
      - /app/node_modules   # node_modules는 컨테이너의 것을 사용 (중요!)
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true # Docker 안에서 React 자동 새로고침을 위한 설정
    depends_on:
      - backend # 백엔드가 먼저 실행되도록 함
    restart: unless-stopped

# 데이터베이스 데이터를 저장할 볼륨 정의
volumes:
  postgres_data: