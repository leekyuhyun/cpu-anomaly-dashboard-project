version: "3.8"

services:
  db:
    image: postgres:15-alpine
    container_name: cpu-dashboard-db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  backend:
    build: ./backend
    container_name: cpu-dashboard-backend
    # app/main.py 실행, /backend/app 폴더 감시
    command: uvicorn app.main:app --host 0.0.0.0 --port 8800 --reload --reload-dir /backend/app
    volumes:
      # 로컬 ./backend -> 컨테이너 /backend 연결
      - ./backend:/backend
    ports:
      - "${HOST_BACKEND_PORT}:8800"
    environment:
      - ENV=${ENV}
      - ORIGINS=${ORIGINS}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      # DB 접속 URL 완성
      - DATABASE_URL=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DB_HOST}:${DB_PORT}/${POSTGRES_DB}
    depends_on:
      - db
    restart: unless-stopped

  frontend:
    build: ./frontend
    container_name: cpu-dashboard-frontend
    volumes:
      # 로컬 ./frontend -> 컨테이너 /frontend 연결
      - ./frontend:/frontend
      - /frontend/node_modules
    ports:
      - "${HOST_FRONTEND_PORT}:3300"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - PORT=3300 # React를 3300 포트로 실행
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
